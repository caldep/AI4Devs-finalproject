package com.spme.maintenance.domain.model;



import org.springframework.data.annotation.Id;
import lombok.Data;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTypeConverter;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTypeConverted;

import java.time.LocalDateTime;

@Data
@DynamoDBTable(tableName = "Prediction")
public class Prediction {
    @Id
    @DynamoDBHashKey
    @DynamoDBAutoGeneratedKey
    private String id;

    @DynamoDBAttribute
    private String equipmentId;

    @DynamoDBTypeConverted(converter = LocalDateTimeConverter.class)
    @DynamoDBAttribute
    private LocalDateTime recordDate;

    @DynamoDBAttribute
    private String predictiveEventType;

    @DynamoDBAttribute
    private Double probability;

    @DynamoDBAttribute
    private Double frequency;

    @DynamoDBAttribute
    private Double current;

    @DynamoDBAttribute
    private Double pressureIn;

    @DynamoDBAttribute
    private Double pressureOut;

    @DynamoDBAttribute
    private Double temperatureIn;

    @DynamoDBAttribute
    private Double temperatureOut;

    @DynamoDBAttribute
    private Double vibrationX;

    public static class LocalDateTimeConverter implements DynamoDBTypeConverter<String, LocalDateTime> {
        @Override
        public String convert(LocalDateTime time) {
            return time.toString();
        }

        @Override
        public LocalDateTime unconvert(String s) {
            return LocalDateTime.parse(s);
        }
    }
}
